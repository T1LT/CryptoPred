{"version":3,"sources":["graph.jsx","utils.js","card.jsx","footer.jsx","mainpage.jsx","index.js"],"names":["Graph","data","id","callback","time","handleClick","useCallback","onClick","width","height","labels","datasets","fill","borderColor","borderWidth","pointBackgroundColor","options","scales","x","beginAtZero","y","plugins","legend","display","layout","padding","elements","point","radius","coinkeys","coinnames","coinrelations","Bitcoin","Ethereum","Litecoin","Dogecoin","Stellar","Tether","Ripple","wikilinks","getTime","timeFromApi","date","Date","getMonth","getYear","Card","close","links","coinsymbol","useState","todayPrice","setTodayPrice","preddata","setPreddata","preddays","setPreddays","loading","setloading","useEffect","fetch","then","res","json","response","Object","keys","map","val","parsePredDays","CircularProgress","href","target","rel","toFixed","maintainAspectRatio","responsive","Footer","Mainpage","showingCard","setShowingCard","cardTitle","setCardTitle","apidata","setApiData","apitime","setApiTime","setLoading","coinsym","setCoinsym","promiseArray","forEach","element","index","symbol","promise","prevState","reduce","acc","curr","parseData","parseTime","push","Promise","all","setID","className","key","isOpen","onRequestClose","overlayClassName","ariaHideApp","closeTimeoutMS","Main","state","showingLanding","setLanding","bind","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb415b45.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst Graph = ({ data, id, callback, time }) => {\r\n  const handleClick = useCallback(() => callback(id), []);\r\n  return (\r\n    <div id=\"graphDiv\" onClick={handleClick}>\r\n      <div id=\"title\">{id}</div>\r\n      <Line\r\n        width=\"500px\"\r\n        height=\"250px\"\r\n        id=\"lineGraph\"\r\n        data={{\r\n          labels: time,\r\n          datasets: [\r\n            {\r\n              data: data,\r\n              fill: true,\r\n              borderColor: \"rgb(17, 149, 242)\",\r\n              borderWidth: 2,\r\n              pointBackgroundColor: \"rgb(17, 149, 242)\",\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          scales: {\r\n            x: { beginAtZero: true },\r\n            y: { beginAtZero: true },\r\n          },\r\n          plugins: { legend: { display: false } },\r\n          layout: { padding: 20 },\r\n          elements: {\r\n            point: {\r\n              radius: 0,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","export const coinkeys = [\"BTC\", \"ETH\", \"LTC\", \"DOGE\", \"XLM\", \"USDT\", \"XRP\"];\r\nexport const coinnames = [\r\n  \"Bitcoin\",\r\n  \"Ethereum\",\r\n  \"Litecoin\",\r\n  \"Dogecoin\",\r\n  \"Stellar\",\r\n  \"Tether\",\r\n  \"Ripple\",\r\n];\r\nexport const coinrelations = {\r\n  Bitcoin: \"BTC\",\r\n  Ethereum: \"ETH\",\r\n  Litecoin: \"LTC\",\r\n  Dogecoin: \"DOGE\",\r\n  Stellar: \"XLM\",\r\n  Tether: \"USDT\",\r\n  Ripple: \"XRP\",\r\n};\r\n// export const currencysymbols = {\r\n//   USD: \"$\",\r\n//   EUR: \"€\",\r\n//   INR: \"₹\",\r\n//   AUD: \"A$\",\r\n//   CNY: \"¥\",\r\n// };\r\nexport const wikilinks = {\r\n  Bitcoin: \"https://en.wikipedia.org/wiki/Bitcoin\",\r\n  Ethereum: \"https://en.wikipedia.org/wiki/Ethereum\",\r\n  Litecoin: \"https://en.wikipedia.org/wiki/Litecoin\",\r\n  Dogecoin: \"https://en.wikipedia.org/wiki/Dogecoin\",\r\n  Stellar: \"https://en.wikipedia.org/wiki/Stellar_(payment_network)\",\r\n  Tether: \"https://en.wikipedia.org/wiki/Tether_(cryptocurrency)\",\r\n  Ripple: \"https://en.wikipedia.org/wiki/Ripple_(payment_protocol)#XRP\",\r\n};\r\nconst getTime = (timeFromApi) => {\r\n  let date = new Date(timeFromApi * 1000);\r\n  return date.getMonth() + 1 + \"/\" + (date.getYear() - 100);\r\n};\r\nexport const parseData = (response) =>\r\n  response[\"Data\"].reduce((acc, curr) => [...acc, curr.close], []);\r\nexport const parseTime = (response) =>\r\n  response[\"Data\"].reduce((acc, curr) => [...acc, getTime(curr.time)], []);\r\nexport const parsePredData = (response) =>\r\n  Object.keys(response).map((val) => response[val]);\r\nexport const parsePredDays = (response) => Object.keys(response);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { parsePredData, parsePredDays } from \"./utils\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// use useeffect for individual calls to the endpoint\r\n\r\nexport const Card = ({ id, close, links, coinsymbol }) => {\r\n  const [todayPrice, setTodayPrice] = useState(\"\");\r\n  const [preddata, setPreddata] = useState(null);\r\n  const [preddays, setPreddays] = useState(null);\r\n  const [loading, setloading] = useState(true);\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://min-api.cryptocompare.com/data/price?fsym=${coinsymbol}&tsyms=USD`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => setTodayPrice(res[\"USD\"]));\r\n\r\n    fetch(`https://crypto-predictions.herokuapp.com/api/predictions/${id}/`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setPreddata(parsePredData(res));\r\n        setPreddays(parsePredDays(res));\r\n        setloading(false);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div id=\"loader\">\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <div id=\"temp\">\r\n          <div id=\"cardStuff\">\r\n            <h1>\r\n              <a href={links[id]} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {id}\r\n              </a>\r\n            </h1>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div id=\"cardText\">\r\n              <h2>Current Price: ${todayPrice}</h2>\r\n              <h2>1-Day Forecast: ${preddata[1].toFixed(2)}</h2>\r\n              <h2>7-Day Forecast: ${preddata[7].toFixed(2)}</h2>\r\n            </div>\r\n          </div>\r\n          <Line\r\n            id=\"cardChart\"\r\n            width={\"750px\"}\r\n            height={\"500px\"}\r\n            data={{\r\n              labels: preddays,\r\n              datasets: [\r\n                {\r\n                  data: preddata,\r\n                  fill: true,\r\n                  borderColor: \"rgb(17, 149, 242)\",\r\n                  borderWidth: 2,\r\n                  pointBackgroundColor: \"rgb(17, 149, 242)\",\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: { legend: { display: false } },\r\n              responsive: false,\r\n              layout: { padding: 30 },\r\n            }}\r\n          />\r\n          <button onClick={close} id=\"closeButton\">\r\n            &times;\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div id=\"footer\">\r\n      <p>\r\n        <a\r\n          href=\"https://github.com/T1LT/CryptoPred\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Github Repository\r\n        </a>\r\n      </p>\r\n      <br />\r\n      <br />\r\n      <p>\r\n        * The predictions displayed here are not 100% accurate, please invest\r\n        wisely.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./reset.css\";\r\nimport \"./app.css\";\r\nimport Graph from \"./graph.jsx\";\r\nimport Card from \"./card.jsx\";\r\nimport Footer from \"./footer.jsx\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {\r\n  coinkeys,\r\n  coinnames,\r\n  wikilinks,\r\n  parseData,\r\n  parseTime,\r\n  // currencysymbols,\r\n  coinrelations,\r\n} from \"./utils\";\r\n\r\nconst Mainpage = () => {\r\n  const [showingCard, setShowingCard] = useState(false);\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  const [apidata, setApiData] = useState({});\r\n  const [apitime, setApiTime] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  // const [currency, setCurrency] = useState(\"USD\");\r\n  const [coinsym, setCoinsym] = useState(\"\");\r\n\r\n  const getUrl = (symbol) =>\r\n    `https://min-api.cryptocompare.com/data/histoday?fsym=${symbol}&tsym=USD&limit=950`;\r\n  useEffect(() => {\r\n    const promiseArray = [];\r\n    setLoading(true);\r\n    coinkeys.forEach((element, index) => {\r\n      const promise = fetch(getUrl(element))\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          setApiData((prevState) => ({\r\n            ...prevState,\r\n            [coinnames[index]]: parseData(response),\r\n          }));\r\n          setApiTime((prevState) => ({\r\n            ...prevState,\r\n            [coinnames[index]]: parseTime(response),\r\n          }));\r\n        });\r\n      promiseArray.push(promise);\r\n    });\r\n    Promise.all(promiseArray).then(() => setLoading(false));\r\n  }, []);\r\n  const setID = useCallback((id) => {\r\n    setShowingCard(true);\r\n    setCardTitle(id);\r\n    setCoinsym(coinrelations[id]);\r\n  }, []);\r\n  // ^ - the dependency array - this array takes values for comparing with previous\r\n  // versions to decide whether or not to update the function passed as the first argument\r\n  const close = () => setShowingCard(false);\r\n  // const selectRef = useRef(null);\r\n  // const updateCurrency = () => {\r\n  //   setCurrency(selectRef.current.value);\r\n  // };\r\n\r\n  return (\r\n    <div id=\"main\" className=\"m-scene\">\r\n      <div id=\"subMain\">\r\n        <div\r\n          id=\"header\"\r\n          className=\"m-header scene_element scene_element--fadeinup\"\r\n        >\r\n          <h1>Cryptocurrency Price Predictor</h1>\r\n        </div>\r\n        {loading ? (\r\n          <div id=\"loader\">\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div id=\"graphs\">\r\n              {coinnames.map((key) => (\r\n                <Graph\r\n                  key={key}\r\n                  data={apidata[key]}\r\n                  id={key}\r\n                  callback={setID}\r\n                  time={apitime[key]}\r\n                />\r\n              ))}\r\n            </div>\r\n            <Modal\r\n              isOpen={!!showingCard}\r\n              onRequestClose={close}\r\n              className=\"Modal\"\r\n              overlayClassName=\"Overlay\"\r\n              ariaHideApp={false}\r\n              closeTimeoutMS={200}\r\n            >\r\n              <Card\r\n                id={cardTitle}\r\n                close={close}\r\n                links={wikilinks}\r\n                // currency={currency}\r\n                // currencysymbols={currencysymbols}\r\n                coinsymbol={coinsym}\r\n              />\r\n            </Modal>\r\n            <div id=\"bottomText\">\r\n              <h3>Click a graph to get the prediction and other details</h3>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {/* <div id=\"currencyMenu\">\r\n        <label>Select a currency:</label>\r\n        <select id=\"currencies\" name=\"currencies\" ref={selectRef}>\r\n          <option value=\"USD\">USD</option>\r\n          <option value=\"EUR\">EUR</option>\r\n          <option value=\"INR\">INR</option>\r\n          <option value=\"AUD\">AUD</option>\r\n          <option value=\"CNY\">CNY</option>\r\n        </select>\r\n        <input type=\"button\" value=\"Submit\" onClick={updateCurrency} />\r\n      </div> */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mainpage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./reset.css\";\r\nimport \"./app.css\";\r\nimport Mainpage from \"./mainpage.jsx\";\r\n\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { showingLanding: true };\r\n    this.setLanding = this.setLanding.bind(this);\r\n  }\r\n\r\n  setLanding() {\r\n    this.setState({ showingLanding: false });\r\n  }\r\n\r\n  render() {\r\n    return !this.state.showingLanding ? (\r\n      <Mainpage />\r\n    ) : (\r\n      <div id=\"landing\" className=\"m-scene\" onClick={this.setLanding}>\r\n        <div\r\n          id=\"header\"\r\n          className=\"m-header scene_element scene_element--fadeinup\"\r\n        >\r\n          <h1>Cryptocurrency Price Predictor</h1>\r\n        </div>\r\n        <div\r\n          id=\"proceedText\"\r\n          className=\"m-text scene_element scene_element--fadeinup\"\r\n        >\r\n          <h2>Click to proceed</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}